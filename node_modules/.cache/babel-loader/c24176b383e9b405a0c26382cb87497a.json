{"ast":null,"code":"var _jsxFileName = \"/home/k/Projects/jerma-tv/jerma-tv-frontend/src/components/VideoModal.js\";\nimport React from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst VideoModal = props => {\n  let playingVideo = props.playingVideo;\n  let setShowing = props.setShowing;\n  let videoID = playingVideo.snippet.resourceId.videoId;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"modal-background\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"modal-close-container\",\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"modal-close-button\",\n        onClick: () => setShowing(false),\n        children: \"X\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 9,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 8,\n      columnNumber: 1\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"modal-container\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"modal-video-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"iframe\", {\n          className: \"modal-video\",\n          src: `https://www.youtube.com/embed/${videoID}`,\n          frameBorder: \"0\",\n          allow: \"accelerometer; \\r autoplay; \\r encrypted-media; \\r gyroscope; \\r picture-in-picture\",\n          allowFullScreen: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 14,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n          className: \"modal-info\",\n          children: playingVideo.snippet.title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 23,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n          className: \"modal-info\",\n          children: [\"Released: \", playingVideo.snippet.publishedAt.slice(0, 10)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 24,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"modal-info\",\n          children: playingVideo.snippet.description\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 25,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 13,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 7,\n    columnNumber: 12\n  }, this);\n};\n\n_c = VideoModal;\nexport default VideoModal;\n\nvar _c;\n\n$RefreshReg$(_c, \"VideoModal\");","map":{"version":3,"sources":["/home/k/Projects/jerma-tv/jerma-tv-frontend/src/components/VideoModal.js"],"names":["React","VideoModal","props","playingVideo","setShowing","videoID","snippet","resourceId","videoId","title","publishedAt","slice","description"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;;;AAEA,MAAMC,UAAU,GAAIC,KAAD,IAAW;AAC1B,MAAIC,YAAY,GAAGD,KAAK,CAACC,YAAzB;AACA,MAAIC,UAAU,GAAGF,KAAK,CAACE,UAAvB;AACA,MAAIC,OAAO,GAAGF,YAAY,CAACG,OAAb,CAAqBC,UAArB,CAAgCC,OAA9C;AACA,sBAAO;AAAK,IAAA,SAAS,EAAC,kBAAf;AAAA,4BACX;AAAK,MAAA,SAAS,EAAC,uBAAf;AAAA,6BACgB;AAAQ,QAAA,SAAS,EAAC,oBAAlB;AAAuC,QAAA,OAAO,EAAE,MAAMJ,UAAU,CAAC,KAAD,CAAhE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADhB;AAAA;AAAA;AAAA;AAAA,YADW,eAIH;AAAK,MAAA,SAAS,EAAC,iBAAf;AAAA,6BAEI;AAAK,QAAA,SAAS,EAAC,uBAAf;AAAA,gCACI;AAAQ,UAAA,SAAS,EAAC,aAAlB;AACA,UAAA,GAAG,EAAG,iCAAgCC,OAAQ,EAD9C;AAEA,UAAA,WAAW,EAAC,GAFZ;AAGA,UAAA,KAAK,EAAC,qFAHN;AAQA,UAAA,eAAe;AARf;AAAA;AAAA;AAAA;AAAA,gBADJ,eAUI;AAAI,UAAA,SAAS,EAAC,YAAd;AAAA,oBAA4BF,YAAY,CAACG,OAAb,CAAqBG;AAAjD;AAAA;AAAA;AAAA;AAAA,gBAVJ,eAWI;AAAI,UAAA,SAAS,EAAC,YAAd;AAAA,mCAAsCN,YAAY,CAACG,OAAb,CAAqBI,WAArB,CAAiCC,KAAjC,CAAuC,CAAvC,EAAyC,EAAzC,CAAtC;AAAA;AAAA;AAAA;AAAA;AAAA,gBAXJ,eAYI;AAAG,UAAA,SAAS,EAAC,YAAb;AAAA,oBAA2BR,YAAY,CAACG,OAAb,CAAqBM;AAAhD;AAAA;AAAA;AAAA;AAAA,gBAZJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAFJ;AAAA;AAAA;AAAA;AAAA,YAJG;AAAA;AAAA;AAAA;AAAA;AAAA,UAAP;AAuBH,CA3BD;;KAAMX,U;AA6BN,eAAeA,UAAf","sourcesContent":["import React from 'react';\r\n\r\nconst VideoModal = (props) => {\r\n    let playingVideo = props.playingVideo;\r\n    let setShowing = props.setShowing;\r\n    let videoID = playingVideo.snippet.resourceId.videoId;\r\n    return <div className='modal-background'>\r\n<div className='modal-close-container'>\r\n                <button className='modal-close-button' onClick={() => setShowing(false)}>X</button>\r\n            </div>\r\n        <div className='modal-container'>\r\n            \r\n            <div className='modal-video-container'>\r\n                <iframe className='modal-video' \r\n                src={`https://www.youtube.com/embed/${videoID}`} \r\n                frameBorder='0' \r\n                allow='accelerometer; \r\n                autoplay; \r\n                encrypted-media; \r\n                gyroscope; \r\n                picture-in-picture' \r\n                allowFullScreen></iframe>\r\n                <h2 className='modal-info'>{playingVideo.snippet.title}</h2>\r\n                <h3 className='modal-info'>Released: {playingVideo.snippet.publishedAt.slice(0,10)}</h3>\r\n                <p className='modal-info'>{playingVideo.snippet.description}</p>\r\n            </div>\r\n            \r\n        </div>\r\n    </div>\r\n}\r\n\r\nexport default VideoModal;"]},"metadata":{},"sourceType":"module"}