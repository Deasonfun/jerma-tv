{"ast":null,"code":"var _jsxFileName = \"/home/k/Projects/jerma-tv/jerma-tv-frontend/src/components/DropDown.js\";\nimport React, { useState } from 'react'; // 2. This code loads the IFrame Player API code asynchronously.\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar tag = document.createElement('script');\nvar yt = document.createElement('script');\ntag.src = \"https://www.youtube.com/iframe_api\";\nvar firstScriptTag = document.getElementsByTagName('script')[0];\nfirstScriptTag.parentNode.insertBefore(tag, firstScriptTag); // 3. This function creates an <iframe> (and YouTube player)\n//    after the API code downloads.\n\nvar player;\n\nfunction onYouTubeIframeAPIReady() {\n  player = new YT.Player('player', {\n    height: '390',\n    width: '640',\n    videoId: 'M7lc1UVf-VE',\n    playerVars: {\n      'playsinline': 1\n    },\n    events: {\n      'onReady': onPlayerReady,\n      'onStateChange': onPlayerStateChange\n    }\n  });\n} // 4. The API will call this function when the video player is ready.\n\n\nfunction onPlayerReady(event) {\n  event.target.playVideo();\n} // 5. The API calls this function when the player's state changes.\n//    The function indicates that when playing a video (state=1),\n//    the player should play for six seconds and then stop.\n\n\nvar done = false;\n\nfunction onPlayerStateChange(event) {\n  if (event.data == YT.PlayerState.PLAYING && !done) {\n    setTimeout(stopVideo, 6000);\n    done = true;\n  }\n}\n\nfunction stopVideo() {\n  player.stopVideo();\n}\n\nconst DropDown = () => {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"video-dropdown\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"player\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 49,\n    columnNumber: 12\n  }, this);\n};\n\n_c = DropDown;\nexport default DropDown;\n\nvar _c;\n\n$RefreshReg$(_c, \"DropDown\");","map":{"version":3,"sources":["/home/k/Projects/jerma-tv/jerma-tv-frontend/src/components/DropDown.js"],"names":["React","useState","tag","document","createElement","yt","src","firstScriptTag","getElementsByTagName","parentNode","insertBefore","player","onYouTubeIframeAPIReady","YT","Player","height","width","videoId","playerVars","events","onPlayerReady","onPlayerStateChange","event","target","playVideo","done","data","PlayerState","PLAYING","setTimeout","stopVideo","DropDown"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC,C,CAEC;;;AACK,IAAIC,GAAG,GAAGC,QAAQ,CAACC,aAAT,CAAuB,QAAvB,CAAV;AACA,IAAIC,EAAE,GAAGF,QAAQ,CAACC,aAAT,CAAuB,QAAvB,CAAT;AAEAF,GAAG,CAACI,GAAJ,GAAU,oCAAV;AACA,IAAIC,cAAc,GAAGJ,QAAQ,CAACK,oBAAT,CAA8B,QAA9B,EAAwC,CAAxC,CAArB;AACAD,cAAc,CAACE,UAAf,CAA0BC,YAA1B,CAAuCR,GAAvC,EAA4CK,cAA5C,E,CAEA;AACA;;AACA,IAAII,MAAJ;;AACA,SAASC,uBAAT,GAAmC;AACjCD,EAAAA,MAAM,GAAG,IAAIE,EAAE,CAACC,MAAP,CAAc,QAAd,EAAwB;AAC/BC,IAAAA,MAAM,EAAE,KADuB;AAE/BC,IAAAA,KAAK,EAAE,KAFwB;AAG/BC,IAAAA,OAAO,EAAE,aAHsB;AAI/BC,IAAAA,UAAU,EAAE;AACV,qBAAe;AADL,KAJmB;AAO/BC,IAAAA,MAAM,EAAE;AACN,iBAAWC,aADL;AAEN,uBAAiBC;AAFX;AAPuB,GAAxB,CAAT;AAYD,C,CAED;;;AACA,SAASD,aAAT,CAAuBE,KAAvB,EAA8B;AAC5BA,EAAAA,KAAK,CAACC,MAAN,CAAaC,SAAb;AACD,C,CAED;AACA;AACA;;;AACA,IAAIC,IAAI,GAAG,KAAX;;AACA,SAASJ,mBAAT,CAA6BC,KAA7B,EAAoC;AAClC,MAAIA,KAAK,CAACI,IAAN,IAAcb,EAAE,CAACc,WAAH,CAAeC,OAA7B,IAAwC,CAACH,IAA7C,EAAmD;AACjDI,IAAAA,UAAU,CAACC,SAAD,EAAY,IAAZ,CAAV;AACAL,IAAAA,IAAI,GAAG,IAAP;AACD;AACF;;AACD,SAASK,SAAT,GAAqB;AACnBnB,EAAAA,MAAM,CAACmB,SAAP;AACD;;AAEP,MAAMC,QAAQ,GAAG,MAAM;AACnB,sBAAO;AAAK,IAAA,SAAS,EAAC,gBAAf;AAAA,2BACL;AAAK,MAAA,EAAE,EAAC;AAAR;AAAA;AAAA;AAAA;AAAA;AADK;AAAA;AAAA;AAAA;AAAA,UAAP;AAGD,CAJH;;KAAMA,Q;AAMN,eAAeA,QAAf","sourcesContent":["import React, { useState } from 'react';\n\n // 2. This code loads the IFrame Player API code asynchronously.\n      var tag = document.createElement('script');\n      var yt = document.createElement('script');\n\n      tag.src = \"https://www.youtube.com/iframe_api\";\n      var firstScriptTag = document.getElementsByTagName('script')[0];\n      firstScriptTag.parentNode.insertBefore(tag, firstScriptTag);\n\n      // 3. This function creates an <iframe> (and YouTube player)\n      //    after the API code downloads.\n      var player;\n      function onYouTubeIframeAPIReady() {\n        player = new YT.Player('player', {\n          height: '390',\n          width: '640',\n          videoId: 'M7lc1UVf-VE',\n          playerVars: {\n            'playsinline': 1\n          },\n          events: {\n            'onReady': onPlayerReady,\n            'onStateChange': onPlayerStateChange\n          }\n        });\n      }\n\n      // 4. The API will call this function when the video player is ready.\n      function onPlayerReady(event) {\n        event.target.playVideo();\n      }\n\n      // 5. The API calls this function when the player's state changes.\n      //    The function indicates that when playing a video (state=1),\n      //    the player should play for six seconds and then stop.\n      var done = false;\n      function onPlayerStateChange(event) {\n        if (event.data == YT.PlayerState.PLAYING && !done) {\n          setTimeout(stopVideo, 6000);\n          done = true;\n        }\n      }\n      function stopVideo() {\n        player.stopVideo();\n      }\n\nconst DropDown = () => {\n    return <div className='video-dropdown'>\n      <div id=\"player\"></div>\n    </div>\n  }\n\nexport default DropDown;"]},"metadata":{},"sourceType":"module"}