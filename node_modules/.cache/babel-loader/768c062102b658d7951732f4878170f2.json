{"ast":null,"code":"var _jsxFileName = \"/home/k/Projects/jerma-tv/src/App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport axios from 'axios';\nimport './App.css';\nimport VideoThumb from './components/VideoThumb';\nimport VideoModal from './components/VideoModal';\nimport TopBar from './components/TopBar';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const [search, setSearch] = useState('');\n  const [videos, setVideos] = useState([]);\n  const [showing, setShowing] = useState(false);\n  const [playingVideo, setPlayingVideo] = useState(null);\n  useEffect(() => {\n    axios.get('localhost:3001/videos').then(response => {\n      setVideos(response.data.items);\n    });\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [showing && /*#__PURE__*/_jsxDEV(VideoModal, {\n      setShowing: setShowing,\n      playingVideo: playingVideo\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 19\n    }, this), /*#__PURE__*/_jsxDEV(TopBar, {\n      setSearch: setSearch,\n      videos: videos,\n      setShowing: setShowing,\n      setPlayingVideo: setPlayingVideo\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"dashboard-container\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"dashboard-videos-container\",\n        children: videos.filter(val => {\n          if (search === '') {\n            return val;\n          } else if (val.snippet.title.toLowerCase().includes(search.toLowerCase())) {\n            return val;\n          }\n        }).map(video => {\n          return /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"video-container\",\n            children: /*#__PURE__*/_jsxDEV(VideoThumb, {\n              video: video,\n              setShowing: setShowing,\n              setPlayingVideo: setPlayingVideo\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 35,\n              columnNumber: 15\n            }, this)\n          }, video.id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 34,\n            columnNumber: 20\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"j9pUT3SoywgpC/o3P7ij1QCL9Qk=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/home/k/Projects/jerma-tv/src/App.js"],"names":["React","useEffect","useState","axios","VideoThumb","VideoModal","TopBar","App","search","setSearch","videos","setVideos","showing","setShowing","playingVideo","setPlayingVideo","get","then","response","data","items","filter","val","snippet","title","toLowerCase","includes","map","video","id"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAO,WAAP;AACA,OAAOC,UAAP,MAAuB,yBAAvB;AACA,OAAOC,UAAP,MAAuB,yBAAvB;AACA,OAAOC,MAAP,MAAmB,qBAAnB;;;AAEA,SAASC,GAAT,GAAe;AAAA;;AACb,QAAM,CAACC,MAAD,EAASC,SAAT,IAAsBP,QAAQ,CAAC,EAAD,CAApC;AACA,QAAM,CAACQ,MAAD,EAASC,SAAT,IAAsBT,QAAQ,CAAC,EAAD,CAApC;AACA,QAAM,CAACU,OAAD,EAAUC,UAAV,IAAwBX,QAAQ,CAAC,KAAD,CAAtC;AACA,QAAM,CAACY,YAAD,EAAeC,eAAf,IAAkCb,QAAQ,CAAC,IAAD,CAAhD;AAEAD,EAAAA,SAAS,CAAC,MAAM;AACdE,IAAAA,KAAK,CAACa,GAAN,CAAU,uBAAV,EAAmCC,IAAnC,CAAyCC,QAAD,IAAc;AACpDP,MAAAA,SAAS,CAACO,QAAQ,CAACC,IAAT,CAAcC,KAAf,CAAT;AACD,KAFD;AAGD,GAJQ,EAIN,EAJM,CAAT;AAOA,sBACE;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA,eACGR,OAAO,iBAAI,QAAC,UAAD;AAAY,MAAA,UAAU,EAAEC,UAAxB;AAAoC,MAAA,YAAY,EAAEC;AAAlD;AAAA;AAAA;AAAA;AAAA,YADd,eAEE,QAAC,MAAD;AAAQ,MAAA,SAAS,EAAEL,SAAnB;AAA8B,MAAA,MAAM,EAAEC,MAAtC;AAA8C,MAAA,UAAU,EAAEG,UAA1D;AAAsE,MAAA,eAAe,EAAEE;AAAvF;AAAA;AAAA;AAAA;AAAA,YAFF,eAGE;AAAK,MAAA,SAAS,EAAC,qBAAf;AAAA,6BACE;AAAK,QAAA,SAAS,EAAC,4BAAf;AAAA,kBACGL,MAAM,CAACW,MAAP,CAAeC,GAAD,IAAS;AACtB,cAAId,MAAM,KAAK,EAAf,EAAmB;AACjB,mBAAOc,GAAP;AACD,WAFD,MAEO,IAAIA,GAAG,CAACC,OAAJ,CAAYC,KAAZ,CAAkBC,WAAlB,GAAgCC,QAAhC,CAAyClB,MAAM,CAACiB,WAAP,EAAzC,CAAJ,EAAoE;AACzE,mBAAOH,GAAP;AACD;AACF,SANA,EAMEK,GANF,CAMOC,KAAD,IAAW;AAChB,8BAAO;AAAoB,YAAA,SAAS,EAAC,iBAA9B;AAAA,mCACL,QAAC,UAAD;AAAY,cAAA,KAAK,EAAEA,KAAnB;AAA0B,cAAA,UAAU,EAAEf,UAAtC;AAAkD,cAAA,eAAe,EAAEE;AAAnE;AAAA;AAAA;AAAA;AAAA;AADK,aAAUa,KAAK,CAACC,EAAhB;AAAA;AAAA;AAAA;AAAA,kBAAP;AAGD,SAVA;AADH;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YAHF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAqBD;;GAlCQtB,G;;KAAAA,G;AAmCT,eAAeA,GAAf","sourcesContent":["import React, { useEffect, useState } from 'react';\nimport axios from 'axios';\nimport './App.css';\nimport VideoThumb from './components/VideoThumb';\nimport VideoModal from './components/VideoModal';\nimport TopBar from './components/TopBar';\n\nfunction App() {\n  const [search, setSearch] = useState('');\n  const [videos, setVideos] = useState([]);\n  const [showing, setShowing] = useState(false)\n  const [playingVideo, setPlayingVideo] = useState(null);\n\n  useEffect(() => {\n    axios.get('localhost:3001/videos').then((response) => {\n      setVideos(response.data.items);\n    })\n  }, [])\n\n  \n  return (\n    <div className='App'>\n      {showing && <VideoModal setShowing={setShowing} playingVideo={playingVideo} />}\n      <TopBar setSearch={setSearch} videos={videos} setShowing={setShowing} setPlayingVideo={setPlayingVideo}/>\n      <div className='dashboard-container'>\n        <div className='dashboard-videos-container'>\n          {videos.filter((val) => {\n            if (search === '') {\n              return val;\n            } else if (val.snippet.title.toLowerCase().includes(search.toLowerCase())) {\n              return val;\n            }\n          }).map((video) => {\n            return <div key={video.id} className='video-container'>\n              <VideoThumb video={video} setShowing={setShowing} setPlayingVideo={setPlayingVideo}/>\n            </div>\n          })}\n        </div>\n      </div>\n    </div>\n  )\n}  \nexport default App;"]},"metadata":{},"sourceType":"module"}