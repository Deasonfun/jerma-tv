{"ast":null,"code":"var _jsxFileName = \"/home/k/jerma-tv-frontend/src/components/VideoModal.js\";\nimport React from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst VideoModal = props => {\n  let playingVideo = props.playingVideo;\n  let setShowing = props.setShowing;\n  let videoID = playingVideo.snippet.resourceId.videoId;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"modal-background\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"modal-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"modal-close-container\",\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"modal-close-button\",\n          onClick: () => setShowing(false),\n          children: \"X\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 10,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 9,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"modal-body-container\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"modal-video-container\",\n          children: [/*#__PURE__*/_jsxDEV(\"iframe\", {\n            className: \"modal-video\",\n            src: `https://www.youtube.com/embed/${videoID}`,\n            frameBorder: \"0\",\n            allow: \"accelerometer; \\r autoplay; \\r encrypted-media; \\r gyroscope; \\r picture-in-picture\",\n            allowFullScreen: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 14,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n            className: \"modal-info\",\n            children: playingVideo.snippet.title\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 23,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n            className: \"modal-info\",\n            children: [\"Released: \", playingVideo.snippet.publishedAt.slice(0, 10)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 24,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"modal-info\",\n            children: playingVideo.snippet.description\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 25,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 13,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 12,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 8,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 7,\n    columnNumber: 12\n  }, this);\n};\n\n_c = VideoModal;\nexport default VideoModal;\n\nvar _c;\n\n$RefreshReg$(_c, \"VideoModal\");","map":{"version":3,"sources":["/home/k/jerma-tv-frontend/src/components/VideoModal.js"],"names":["React","VideoModal","props","playingVideo","setShowing","videoID","snippet","resourceId","videoId","title","publishedAt","slice","description"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;;;AAEA,MAAMC,UAAU,GAAIC,KAAD,IAAW;AAC1B,MAAIC,YAAY,GAAGD,KAAK,CAACC,YAAzB;AACA,MAAIC,UAAU,GAAGF,KAAK,CAACE,UAAvB;AACA,MAAIC,OAAO,GAAGF,YAAY,CAACG,OAAb,CAAqBC,UAArB,CAAgCC,OAA9C;AACA,sBAAO;AAAK,IAAA,SAAS,EAAC,kBAAf;AAAA,2BACH;AAAK,MAAA,SAAS,EAAC,iBAAf;AAAA,8BACI;AAAK,QAAA,SAAS,EAAC,uBAAf;AAAA,+BACI;AAAQ,UAAA,SAAS,EAAC,oBAAlB;AAAuC,UAAA,OAAO,EAAE,MAAMJ,UAAU,CAAC,KAAD,CAAhE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,cADJ,eAII;AAAK,QAAA,SAAS,EAAC,sBAAf;AAAA,+BACI;AAAK,UAAA,SAAS,EAAC,uBAAf;AAAA,kCACI;AAAQ,YAAA,SAAS,EAAC,aAAlB;AACA,YAAA,GAAG,EAAG,iCAAgCC,OAAQ,EAD9C;AAEA,YAAA,WAAW,EAAC,GAFZ;AAGA,YAAA,KAAK,EAAC,qFAHN;AAQA,YAAA,eAAe;AARf;AAAA;AAAA;AAAA;AAAA,kBADJ,eAUI;AAAI,YAAA,SAAS,EAAC,YAAd;AAAA,sBAA4BF,YAAY,CAACG,OAAb,CAAqBG;AAAjD;AAAA;AAAA;AAAA;AAAA,kBAVJ,eAWI;AAAI,YAAA,SAAS,EAAC,YAAd;AAAA,qCAAsCN,YAAY,CAACG,OAAb,CAAqBI,WAArB,CAAiCC,KAAjC,CAAuC,CAAvC,EAAyC,EAAzC,CAAtC;AAAA;AAAA;AAAA;AAAA;AAAA,kBAXJ,eAYI;AAAG,YAAA,SAAS,EAAC,YAAb;AAAA,sBAA2BR,YAAY,CAACG,OAAb,CAAqBM;AAAhD;AAAA;AAAA;AAAA;AAAA,kBAZJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,cAJJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADG;AAAA;AAAA;AAAA;AAAA,UAAP;AAuBH,CA3BD;;KAAMX,U;AA6BN,eAAeA,UAAf","sourcesContent":["import React from 'react';\r\n\r\nconst VideoModal = (props) => {\r\n    let playingVideo = props.playingVideo;\r\n    let setShowing = props.setShowing;\r\n    let videoID = playingVideo.snippet.resourceId.videoId;\r\n    return <div className='modal-background'>\r\n        <div className='modal-container'>\r\n            <div className='modal-close-container'>\r\n                <button className='modal-close-button' onClick={() => setShowing(false)}>X</button>\r\n            </div>\r\n            <div className='modal-body-container'>\r\n                <div className='modal-video-container'>\r\n                    <iframe className='modal-video' \r\n                    src={`https://www.youtube.com/embed/${videoID}`} \r\n                    frameBorder='0' \r\n                    allow='accelerometer; \r\n                    autoplay; \r\n                    encrypted-media; \r\n                    gyroscope; \r\n                    picture-in-picture' \r\n                    allowFullScreen></iframe>\r\n                    <h2 className='modal-info'>{playingVideo.snippet.title}</h2>\r\n                    <h3 className='modal-info'>Released: {playingVideo.snippet.publishedAt.slice(0,10)}</h3>\r\n                    <p className='modal-info'>{playingVideo.snippet.description}</p>\r\n                </div>\r\n            </div> \r\n        </div>\r\n    </div>\r\n}\r\n\r\nexport default VideoModal;"]},"metadata":{},"sourceType":"module"}