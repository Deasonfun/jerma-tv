{"ast":null,"code":"var _jsxFileName = \"/home/k/Projects/jerma-tv/jerma-tv-frontend/src/App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport axios from 'axios';\nimport './App.css';\nimport DropDown from './DropDown';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar apiKey = \"AIzaSyAqxjnnG7Sfva9oHu4Btuosrehfl5l_Qwo\";\nvar playlistID = \"PLPFcHFmFMXEDatE2hyXFz0iC8TMeo7xmL\";\nvar URL = `https://www.googleapis.com/youtube/v3/playlistItems?part=snippet&playlistId=${playlistID}&key=${apiKey}`;\n\nfunction App() {\n  _s();\n\n  const [videos, setVideos] = useState([]);\n  const [showing, setShowing] = useState(false);\n  useEffect(() => {\n    axios.get(URL).then(response => {\n      setVideos(response.data.items);\n    });\n  }, []);\n\n  const handleClick = e => {\n    setShowing(!showing);\n  }; //get youtube thumbnail for each video\n\n\n  const getThumbnail = video => {\n    return video.snippet.thumbnails.medium.url;\n  };\n\n  console.log(videos);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: videos.map(video => {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"video-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          src: getThumbnail(video),\n          alt: \"thumbnail\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n          children: video.snippet.title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 14\n      }, this);\n    })\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"N3jpzhdc9ATZSShgCUIHSVJaa5Q=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/home/k/Projects/jerma-tv/jerma-tv-frontend/src/App.js"],"names":["React","useEffect","useState","axios","DropDown","apiKey","playlistID","URL","App","videos","setVideos","showing","setShowing","get","then","response","data","items","handleClick","e","getThumbnail","video","snippet","thumbnails","medium","url","console","log","map","title"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAO,WAAP;AACA,OAAOC,QAAP,MAAqB,YAArB;;AAEA,IAAIC,MAAM,GAAG,yCAAb;AACA,IAAIC,UAAU,GAAG,oCAAjB;AACA,IAAIC,GAAG,GAAI,+EAA8ED,UAAW,QAAOD,MAAO,EAAlH;;AAEA,SAASG,GAAT,GAAe;AAAA;;AACb,QAAM,CAACC,MAAD,EAASC,SAAT,IAAsBR,QAAQ,CAAC,EAAD,CAApC;AACA,QAAM,CAACS,OAAD,EAAUC,UAAV,IAAwBV,QAAQ,CAAC,KAAD,CAAtC;AAEAD,EAAAA,SAAS,CAAC,MAAM;AACdE,IAAAA,KAAK,CAACU,GAAN,CAAUN,GAAV,EAAeO,IAAf,CAAqBC,QAAD,IAAc;AAChCL,MAAAA,SAAS,CAACK,QAAQ,CAACC,IAAT,CAAcC,KAAf,CAAT;AACD,KAFD;AAGD,GAJQ,EAIN,EAJM,CAAT;;AAMA,QAAMC,WAAW,GAAIC,CAAD,IAAO;AACzBP,IAAAA,UAAU,CAAC,CAACD,OAAF,CAAV;AACD,GAFD,CAVa,CAcb;;;AACA,QAAMS,YAAY,GAAIC,KAAD,IAAW;AAC9B,WAAOA,KAAK,CAACC,OAAN,CAAcC,UAAd,CAAyBC,MAAzB,CAAgCC,GAAvC;AACD,GAFD;;AAIAC,EAAAA,OAAO,CAACC,GAAR,CAAYlB,MAAZ;AAEA,sBACE;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA,cACEA,MAAM,CAACmB,GAAP,CAAYP,KAAD,IAAW;AACtB,0BAAO;AAAK,QAAA,SAAS,EAAC,iBAAf;AAAA,gCACL;AAAK,UAAA,GAAG,EAAED,YAAY,CAACC,KAAD,CAAtB;AAA+B,UAAA,GAAG,EAAC;AAAnC;AAAA;AAAA;AAAA;AAAA,gBADK,eAEL;AAAA,oBAAKA,KAAK,CAACC,OAAN,CAAcO;AAAnB;AAAA;AAAA;AAAA;AAAA,gBAFK;AAAA;AAAA;AAAA;AAAA;AAAA,cAAP;AAIA,KALA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAUD;;GA/BQrB,G;;KAAAA,G;AAgCT,eAAeA,GAAf","sourcesContent":["import React, { useEffect, useState } from 'react';\nimport axios from 'axios';\nimport './App.css';\nimport DropDown from './DropDown';\n\nvar apiKey = \"AIzaSyAqxjnnG7Sfva9oHu4Btuosrehfl5l_Qwo\";\nvar playlistID = \"PLPFcHFmFMXEDatE2hyXFz0iC8TMeo7xmL\";\nvar URL = `https://www.googleapis.com/youtube/v3/playlistItems?part=snippet&playlistId=${playlistID}&key=${apiKey}`;\n\nfunction App() {\n  const [videos, setVideos] = useState([]);\n  const [showing, setShowing] = useState(false)\n\n  useEffect(() => {\n    axios.get(URL).then((response) => {\n      setVideos(response.data.items);\n    })\n  }, [])\n\n  const handleClick = (e) => {\n    setShowing(!showing);\n  }\n  \n  //get youtube thumbnail for each video\n  const getThumbnail = (video) => {\n    return video.snippet.thumbnails.medium.url;\n  }\n\n  console.log(videos);\n\n  return (\n    <div className='App'>\n     {videos.map((video) => {\n      return <div className='video-container'>\n        <img src={getThumbnail(video)} alt='thumbnail'/>\n        <h3>{video.snippet.title}</h3>\n      </div>\n     })}\n    </div>\n  )\n}  \nexport default App;"]},"metadata":{},"sourceType":"module"}